{"version":3,"sources":["main.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","isLocalhost","Boolean","window","location","hostname","match","navigator","protocol","serviceWorker","register","then","registration","onupdatefound","controller","installingWorker","installing","onstatechange","state","Error","e","console","error","Calcutip","this","totalTip","document","querySelector","totalOverall","totalTax","totalTipTaxInc","totalOverallTaxInc","totalMoreBtn","totalMoreArea","inputMoreBtn","inputMoreArea","inputBillPrice","inputTipPct","inputNumPeople","inputSalesTax","inputBillPriceVal","inputTipPctVal","inputNumPeopleVal","inputSalesTaxVal","taxVal","onLoad","updateValues","bind","toggleTotalHide","toggleInputHide","calculateTotalTip","calculateTotalOverall","calculateTotalTax","calculateTotalTipTaxInc","calculateTotalOverallTaxInc","addEventListeners","value","addEventListener","classList","toggle","evt","contains","innerHTML","log","checkIsNaN","parseFloat","num","isNaN","totalNoTax","finalTotalTip","toFixed","finalTotal"],"mappings":"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","file":"main.js","sourcesContent":["/* eslint-env browser */\n(function() {\n  'use strict';\n\n  // Check to make sure service workers are supported in the current browser,\n  // and that the current page is accessed from a secure origin. Using a\n  // service worker from an insecure origin will trigger JS console errors. See\n  // http://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features\n  var isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n    );\n\n  if ('serviceWorker' in navigator &&\n      (window.location.protocol === 'https:' || isLocalhost)) {\n    navigator.serviceWorker.register('service-worker.js')\n    .then(function(registration) {\n      // updatefound is fired if service-worker.js changes.\n      registration.onupdatefound = function() {\n        // updatefound is also fired the very first time the SW is installed,\n        // and there's no need to prompt for a reload at that point.\n        // So check here to see if the page is already controlled,\n        // i.e. whether there's an existing service worker.\n        if (navigator.serviceWorker.controller) {\n          // The updatefound event implies that registration.installing is set:\n          // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-container-updatefound-event\n          var installingWorker = registration.installing;\n\n          installingWorker.onstatechange = function() {\n            switch (installingWorker.state) {\n              case 'installed':\n                // At this point, the old content will have been purged and the\n                // fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in the page's interface.\n                break;\n\n              case 'redundant':\n                throw new Error('The installing ' +\n                                'service worker became redundant.');\n\n              default:\n                // Ignore\n            }\n          };\n        }\n      };\n    }).catch(function(e) {\n      console.error('Error during service worker registration:', e);\n    });\n  }\n\n  class Calcutip {\n    constructor(){\n      /**\n       * Selectors for the total area\n       */\n      this.totalTip = document.querySelector(\".total-tip\");\n      this.totalOverall = document.querySelector(\".total-overall\");\n      this.totalTax = document.querySelector(\".total-tax\");\n      this.totalTipTaxInc = document.querySelector(\".total-tip-tax-inc\");\n      this.totalOverallTaxInc = document.querySelector(\".total-overall-tax-inc\");\n\n      this.totalMoreBtn = document.querySelector(\".total__more-btn\");\n      this.totalMoreArea = document.querySelector(\".total__more-area\");\n\n      this.inputMoreBtn = document.querySelector(\".input-area__more-btn\");\n      this.inputMoreArea = document.querySelector(\".input-area__more-area\");\n\n      /**\n       * Selectors for the input form\n       */\n      this.inputBillPrice = document.querySelector(\".input-bill-price input\");\n      this.inputTipPct = document.querySelector(\".input-tip-pct input\");\n      this.inputNumPeople = document.querySelector(\".input-num-people input\");\n      this.inputSalesTax = document.querySelector(\".input-sales-tax input\");\n\n      /**\n       * Member variables\n       */\n      this.inputBillPriceVal = 0;\n      this.inputBillPriceVal = 0;\n      this.inputTipPctVal = 0;\n      this.inputNumPeopleVal = 0;\n      this.inputSalesTaxVal = 0;\n      this.taxVal = 0;\n\n      /**\n       * Member methods\n       */\n      this.onLoad = this.onLoad();\n      this.updateValues = this.updateValues.bind(this);\n      this.toggleTotalHide = this.toggleTotalHide.bind(this);\n      this.toggleInputHide = this.toggleInputHide.bind(this);\n\n      this.calculateTotalTip = this.calculateTotalTip.bind(this);\n      this.calculateTotalOverall = this.calculateTotalOverall.bind(this);\n      this.calculateTotalTax = this.calculateTotalTax.bind(this);\n      this.calculateTotalTipTaxInc = this.calculateTotalTipTaxInc.bind(this);\n      this.calculateTotalOverallTaxInc = this.calculateTotalOverallTaxInc.bind(this);\n\n      this.addEventListeners();\n    }\n\n    addEventListeners() { \n      document.addEventListener(\"onload\", this.onLoad);\n\n      this.totalMoreBtn.addEventListener(\"click\", this.toggleTotalHide);\n      this.inputMoreBtn.addEventListener(\"click\", this.toggleInputHide);\n\n      this.inputBillPrice.addEventListener(\"input\", this.updateValues);\n      this.inputTipPct.addEventListener(\"input\", this.updateValues);\n      this.inputNumPeople.addEventListener(\"input\", this.updateValues);\n      this.inputSalesTax.addEventListener(\"input\", this.updateValues);\n    }\n\n    onLoad() { \n      this.totalMoreArea.classList.toggle(\"hidden\");\n      this.inputMoreArea.classList.toggle(\"hidden\");\n      this.updateValues();\n    }\n\n    toggleTotalHide(evt) {\n      if(this.totalMoreArea.classList.contains(\"hidden\")){\n        this.totalMoreBtn.innerHTML = 'Less Bill Info';\n        this.totalMoreArea.classList.toggle(\"hidden\");\n      }else{\n        this.totalMoreBtn.innerHTML = 'More Bill Info';\n        this.totalMoreArea.classList.toggle(\"hidden\");\n      }\n      console.log(\"Clicking on toggle hide\");\n    }\n\n    toggleInputHide(evt) {\n      if(this.inputMoreArea.classList.contains(\"hidden\")){\n        this.inputMoreBtn.innerHTML = 'Less Info';\n        this.inputMoreArea.classList.toggle(\"hidden\");\n      }else{\n        this.inputMoreBtn.innerHTML = 'More Info';\n        this.inputMoreArea.classList.toggle(\"hidden\");\n      }\n      console.log(\"input Clicking on toggle hide\");\n    }\n\n    updateValues(evt) {\n      this.inputBillPriceVal = this.checkIsNaN(parseFloat(this.inputBillPrice.value));\n      this.inputTipPctVal = this.checkIsNaN(parseFloat(this.inputTipPct.value));\n      this.inputNumPeopleVal = this.checkIsNaN(parseFloat(this.inputNumPeople.value));\n      this.inputSalesTaxVal = this.checkIsNaN(parseFloat(this.inputSalesTax.value));\n\n      //Determine if num of people is 0 to avoid dividing by 0\n      this.inputNumPeopleVal = this.inputNumPeopleVal > 0 ? this.inputNumPeopleVal : 1;\n\n      //Determine Tax\n      this.taxVal = (this.inputBillPriceVal) - (this.inputBillPriceVal / ((this.inputSalesTaxVal * 0.01) + 1));\n\n      //Do final calculations to find final values\n      this.totalTip.innerHTML = this.calculateTotalTip();\n      this.totalOverall.innerHTML = this.calculateTotalOverall();\n      this.totalTax.innerHTML = this.calculateTotalTax();\n      this.totalTipTaxInc.innerHTML = this.calculateTotalTipTaxInc();\n      this.totalOverallTaxInc.innerHTML = this.calculateTotalOverallTaxInc();\n    }\n\n    checkIsNaN(num){\n      return isNaN(num) ? 0 : num;\n    }\n\n    calculateTotalTip() {\n      let totalNoTax = this.inputBillPriceVal - this.taxVal;\n      let finalTotalTip = (totalNoTax * (this.inputTipPctVal * 0.01)) / this.inputNumPeopleVal;\n      \n      return parseFloat(finalTotalTip).toFixed(2);\n    }\n\n    calculateTotalOverall() {\n      let totalNoTax = this.inputBillPriceVal - this.taxVal;\n      let finalTotalTip = totalNoTax * (this.inputTipPctVal * 0.01);\n\n      let finalTotal = (this.inputBillPriceVal + finalTotalTip) / this.inputNumPeopleVal;\n      \n      return parseFloat(finalTotal).toFixed(2);\n    }\n    calculateTotalTax() {  \n      return parseFloat(this.taxVal).toFixed(2);\n    }\n    calculateTotalTipTaxInc() {\n      let finalTotalTip = (this.inputBillPriceVal * ((this.inputTipPctVal) * 0.01))/this.inputNumPeopleVal;\n      \n      return parseFloat(finalTotalTip).toFixed(2);\n    }\n    calculateTotalOverallTaxInc() {\n      let finalTotalTip = (this.inputBillPriceVal * ( 1 + (this.inputTipPctVal) * 0.01))/this.inputNumPeopleVal;\n      \n      return parseFloat(finalTotalTip).toFixed(2);\n    }\n  }\n  /**\n   * Create the object\n   */\n  let calcutipObj = new Calcutip();\n})();\n"]}